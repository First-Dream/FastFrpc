buildscript {
    repositories {
        maven { url 'https://maven.minecraftforge.net' }
        maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.+'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

java {
    archivesBaseName = 'FastFrpc-Forge-1.16'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

dependencies {
    implementation project(":common")

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.35'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    api(fg.deobf("me.shedaniel.cloth:cloth-config-forge:4.14.64"))
}

minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                fastfrpcforge {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                fastfrpcforge {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'fastfrpcforge', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fastfrpcforge {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "fastfrpcforge.refmap.json"

    config "fastfrpcforge.mixins.json"
}

shadowJar {
    dependencies {
        include(project(':common'))
    }
}

artifacts {
    archives shadowJar
    shadow shadowJar
}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.outputs.files.singleFile
    }
}